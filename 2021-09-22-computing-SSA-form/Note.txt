SSA форма - формат промежуточного представления, подразумевающий единственное присваивание
каждой переменной.

Примеры:
  X = X + Y;      X1 = X0 + Y0;
  Y = X - Y;  ->  Y1 = X1 - Y0;
  X = X - Y;      X2 = X1 - Y1;

При умножении вектора, представляющего номера узлов графа с присваиванием переменной на
топологическую матрицу графа, мы получим точки интегрирования фи-функции, например:


                 B0+--------+
                   | v <- 1 |
                   +--------+
                    /   \
                   v     \
            B1+--------+  \
           -->|        |   \
         /    +--------+    \
        /         /\         \
       /         /  \         \
      /         /    \         \
     /         /      \         \
    /         v        v         \
   /  B2+--------+ B3+--------+  /
  /     | v <- 2 |   |        | /
  \     +--------+   +--------+/
   \          \        /      /
    \          \      /      /
     \          \    /      /
      \          \  /      /
       \          vv      /
        \ B4+--------+   /
         ---|        |  /
            +--------+ /
                   \  /
                    vv
             B5+--------+
               |        |
               +--------+

   (101000) x | 0 0 0 0 0 0 | = (010011)
              | 0 0 0 0 0 1 |
              | 0 1 0 0 1 1 |
              | 0 1 0 0 1 1 |
              | 0 1 0 0 0 1 |
              | 0 0 0 0 0 0 |

Вычисление матрицы J требует нескольких действий:
  J = D+
  D = (A.M - M)^T
  M = ~f*(~M0, A, ~I),
  
где A    - транспонированная матрица смежности графа,
    M0   - матрица инициализации,
    I    - identity (единичная) матрица,
    D    - битовое представление доминирующей вершины (???),
    M    - отношения доминирований, представленные матрицей (если m[i][j] == 1, то j доминирует
           над i, иначе == 0).
Операции:
    A+   - транзитивное замыкание матрицы, т.е A+ = sum(k=1, inf) (I + A)^k.
    f    - транзитивная функция f*(S, A, C), описанная рекуррентным соотношением
           X0 = S
           x(i+1) = A.X ∩ C, , ∀i ≥ 0.

Продолжить c:
We employ the extended transitive closure function.

SSA форма и Control Dependence Graph используются для представления потока
данных и выполнения в программе. Каждая из этих техник нужна для оптимизации. Хоть эти структуры
и потенциальны, их сложное строение препядствуют эффективному использованию. 

Граф потока управления - множество всех возможных путей исполнения программы.
Возможны 2 случая:
  1) входной блок (мёртвый код)
  2) выходной блок (бесконечный цикл)

Мёртвый код может быть удалён из программы во время оптимизации.

Промежуточный код компилятора переводится в SSA форму, оптимизируется и позже возвращается из
SSA формы. Представление простого потока данных может быть реализовано более компактно используя
SSA форму. Если переменная имеет D определений и U использований, существует DxU def-use цепей.

Простой поток выполнения:

  I <- 1                 (1)
  J <- 1                 (1)
  K <- 1                 (1)
  L <- 1                 (1)
  repeat                 (2)      +-------+         +---+
    if (P)               (2)      | Entry |-------->| 1 |
      then do            (3)      +-------+         +---+
        J <- I           (3)       |                  |
        if (Q)           (3)       |                  |
          then L <- 2    (4)       |                +---+
          else L <- 3    (5)       |                | 2 |---------
        K <- K           (6)       |                +---+        |
      end                (6)       |               /     \       |
      else K <- K + 2    (7)       |              /       \      |
    print(I, J, K, L)    (8)       |             /         \     |
    repeat               (9)       |           +---+     +---+   |
      if (R)             (9)       |           | 3 |     | 7 |   |
        then L <- L + 4  (10)      |           +---+     +---+   |
    until (S)            (11)      |            / \        |     |
    I <- I + 6           (12)      |           /   \       |     |
  until (T)              (12)      |       +---+  +---+    |     |
                                   |       | 4 |  | 5 |    |     |
                                   |       +---+  +---+    |     |
                                   |          \    /       |     |
                                   |           \  /        |     |
                                   |          +---+        |     |
                                   |          | 6 |        |     |
                                   |          +---+       /      |
                                   |             \       /       |
                                   |              \     /        |
                                   |               \   /         |
                                   |               +---+         |
                                   |               | 8 |         |
                                   |               +---+         |
                                   |                 |           |
                                   |               +---+         |
                                   |               | 9 |         |
                                   |               +---+         |
                                   |              /  |           |
                                   |             /   |           |
                                   |        +----+   |           |
                                   |        | 10 |   |           |
                                   |        +----+   |           |
                                   |            \    |           |
                                   |             \   |           |
                                   |              \  |           |
                                   |              +----+         |
                                   |              | 11 |         |
                                   |              +----+         |
                                   |                 |           |
                                  +------+        +----+         |
                                  | Exit |--------| 12 |---------|
                                  +------+        +----+

Нода с > 1 преемников - branch-нода
Нода с > 1 предшественников - join-нода
