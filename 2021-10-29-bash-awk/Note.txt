Получить доступ к первому полю каждой строки:
  awk '{print $1}' file

Задать разделительный символ двоеточие:
  awk -F: '{print $1}' /etc/passwd
  
Замена переменных:
  echo "My name is Tom" | awk '{$4="Adam"; print $0}'

Чтение awk-скрипта из файла:
  script.awk: {print $1 " has a home at " $6}
  awk -F: -f script.awk /etc/passwd
  Также можно писать awk-скрипты в несколько строк:
  {
    text = " has a home at "
    print $1 text $6
  }

Выполнение команды до и после начала обработки текста:
  awk 'BEGIN {print "Starting..."} {print $0} END {print "Finish"}'

Установка различных переменных:
  awk 'BEGIN {FS=":"; OFS="---"; ORS="\n\t"} {print $1,$2,$3}' /etc/passwd
  FS  - разделитель столбцов на входе
  OFS - разделитель столбцов на выходе
  ORS - разделитель строк на выходе
  FIELDWIDTHS - список чисел, например "3 2 2 2 3", устанавливающий
    длину соответствующих аргументов

Встроенные переменные:
  ARGC, ARGV - как во всех ЯПах
  NF - позволяет обращаться к последней записи, не зная её номера, аналог back()

Условные операторы:
  echo "1 2 3 4 5" | \
  awk '{if ($1 == 2) { print $1 } else { print $2 }}'

Факториал:
  echo "1 2 3 4 5 6" | \
  awk '{res = 1; i = 1; while (i < $NF + 1) { res *= i; ++i; } print res }'

Также есть printf как в С, мат. функции: sin, cos, exp, int, log, rand, sqrt.

Функции:
  echo "1" | awk 'function flush() { printf "Arg: %s", $1 } { flush() }'

Условия:
  echo "1 2" | awk '$1 > $2 {print $1,$2}'
  Продолжить выполнение если выполняется условие
  echo "1 2" | awk '/[0-9]{1}\s{1}[0-9]{1}/ {print $1,$2}'
  Продолжить выполнение если существует матч регулярки
