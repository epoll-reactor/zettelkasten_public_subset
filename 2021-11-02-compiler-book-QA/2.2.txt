Рассмотрим контекстно-свободную грамматику
  S -> S S + | S S * | a

  1) Покажите, как данная грамматика генерирует строку aa+a*.
       1: S S + -> _t1 = aa+
       2: S S * -> _t2 = _t1 a*

  2) Постройте дерево разбора для данной строки.
                 *
                / \
               +   a
              / \
             a   a
             
  3) Какой язык генерирует данная грамматика? Обоснуйте свой ответ.
       Это похоже на ограниченный вариант обратной польской нотации в
       постфиксной форме. Он позволяет строить арифметические выражения
       с операторами "+" и "*".

Какой язык генерируется каждой из следующих грамматик?
  1) S -> 0 S 1 | 0 1
     Эта грамматика позволяет строить выражения по типу 0011, 000111, 00001111.
     Она образует одинаковое количество идущих подряд нулей и единиц.

  2) S -> + S S | - S S | a
     Эта грамматика позволяет строить выражения по типу +aa, +++aaaa, -++-aaa+aaa.
     Похоже на префиксную польскую нотацию.

  3) S -> S ( S ) S | e
     Эта грамматика создаёт (), вложенные в себя ((())) или ()()(), и т.д.

  4) S -> a S b S | b S a S | e
     Эта грамматика создаёт строки ab, ba, aabbba.

  5) S -> a | S + S | S S | S * | ( S )
     Эта грамматика создаёт строки a, a+a, aa, a*, a+a*, a+(a*+a*)
