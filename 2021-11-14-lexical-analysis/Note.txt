При рассмотрении лексического анализа используются 3 связанных, но различных терми-
на:
  Токен - пара, состоящая из имени токена и необязательного атрибута. Имя токена -
  абстрактный символ, представляющий тип лексической единицы.
  
  Шаблон - описание вида, который может принимать лексема токена.

  Лексема - последовательность символов входной программы, которая соответствует
  шаблону токена и идентифицируется как экземпляр токена.

+------------+-----------------------+----------------+
|      Токен | Неформальное описание | Примеры лексем |
+------------+-----------------------+----------------+
|         if |                    if |             if |
|       else |                  else |           else |
| comparison |  <, >, <=, >=, ==, != |         <=, =! |
|         id |        [a-zA-Z_](\w*) |      pi, score |
|     number |    \d*(\.\d+)?(e\d+)? | 3.14, 0, 6.2e2 |
|    literal |            \"[^\"]*\" |        "Hello" |
+------------+-----------------------+----------------+

Информация о лексемах заносится в таблицу символов.
Например, для фрагмента кода на Fortran
  E = M * C ** 2
В таблице символов окажется следующее
  <id, указатель на запись в таблице символов для E>
  <assign_op>
  <id, указатель на запись в таблице символов для M>
  <mult_op>
  <id, указатель на запись в таблице символов для C>
  <exp_op>
  <number, целое число 2>

Как видно, для некоторых типов лексем атрибуты излишни. В данном случае лишь
<number> имеет атрибут в виде целого числа 2.

Для увеличения производительности лексического анализа существуют методы буфери-
зации. Одна из важных черт такой буферизации - 2 по очереди загружаемых буфера.

   E    =     M     *    C      * *     2   eof
                                ^       ^
                                |       |
                                |    forward
                          lexemeBegin
                          
Оба буфера имеют достаточно большой объём, например 4096 байт (размер дискового
блока). Таким образом можно избежать дорогостоящих системных вызовов для каждого
считываемого символа. Если во входном буфере осталось менее 4096 байт, конец
такого буфера маркируется как EOF.

При этом поддерживаются 2 указателя:
  lexemeBegin - маркер начала текущей лексемы, протяжённость которой мы
  пытаемся определить.

  forward - указатель, с помощью которого поток сканируется пока он соответствует
  какому-то шаблону.

